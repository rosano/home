{{ $travel := resources.Get "travel.csv" | transform.Unmarshal (dict "targetType" "map") }}
{{ $hydrated := slice }}
{{ range $travel }}
  {{ $hydrated = $hydrated | append (merge . (dict "date" (time .date))) }}
{{ end }}

{{ .Site.Store.Set "kTravelHydrated" $hydrated }}

{{ range $dir := (slice "journal" "content/vibrations") }}
  {{ range readDir $dir }}
    {{ if not (in (slice "." "_") (substr .Name 0 1)) }}
      {{ $raw := readFile (path.Join $dir .Name) }}
      {{ $parts := split $raw "---" }}
      
      {{ $params := unmarshal (index $parts 1) }}
      {{ $date := time $params.date }}

      {{ $first := index (last 1 (where $hydrated "date" "le" $date)) 0 }}
      {{ $date = ($date | time.In $first.zone) }}

      {{ $params = merge $params (dict
        "place" (slice $first.place)
        "country" (slice $first.country)
      ) }}
      {{ $params = merge $params (dict
        "browse_year" ($params.date | time.Format "2006")
        "browse_month" ($params.date | time.Format "2006/01")
        "browse_day" ($params.date | time.Format "2006/01/02")
      ) }}

      {{ if strings.Contains $dir "content" }}
        {{ $params = merge $params (dict
          "isContent" "true"
          "originalSection" (index (split $dir "/") 1)
        ) }}
      {{ end }}

      {{ $page := dict
        "content" (dict "mediaType" "text/markdown" "value" (delimit (after 2 $parts) "---"))
        "dates" (dict "date" $date)
        "params" $params
        "kind" "page"
        "path" (index (split .Name ".") 0)
      }}
      {{ $.AddPage $page }}
    {{ end }}
  {{ end }}
{{ end }}
