{{ $departures := slice (dict
  "time" (time "0001-01-01T01:00:00.000Z")
  "place" "Toronto"
  "country" "Canada"
  "timezone" "America/Toronto"
) }}

{{ if fileExists "assets/departures.csv" }}
  {{ range resources.Get "departures.csv" | transform.Unmarshal (dict "targetType" "map") }}
    {{ $departures = $departures | append (merge . (dict "time" (time .time))) }}
  {{ end }}
{{ end }}

{{ .Site.Store.Set "kDepartures" $departures }}

{{ range $dir := (slice "content-sources/journal" "content/vibrations" "content/blog") }}
  {{ range readDir $dir }}
    {{ if in (slice "." "_") (substr .Name 0 1) }}
      {{ continue }}
    {{ end }}

    {{ $raw := readFile (path.Join $dir .Name) }}
    {{ $parts := split $raw "---" }}
    
    {{ $params := unmarshal (index $parts 1) }}
    {{ $date := time $params.date }}

    {{ if eq $raw "" }}
      {{ continue }}
    {{ end }}

    {{ if eq (index $params "title") "Content Placeholder" }}
      {{ continue }}
    {{ end }}

    {{ if (index $params "draft") }}
      {{ continue }}
    {{ end }}

    {{ $dates := dict "posted" $date }}
    {{ $basename := path.BaseName .Name }}
    {{ if (index $params "around") }}
      {{ $dates = merge $dates (dict "recorded" (time (index $params "around"))) }}
    {{ end }}
    
    {{ range $k, $v := $dates }}
      {{ $departure := index (last 1 (where $departures "time" "le" $v)) 0 }}
      {{ $v = ($v | time.In $departure.timezone) }}

      {{ $params = merge $params (dict
        "place" (slice $departure.place)
        "country" (slice $departure.country)
      ) }}
      {{ $params = merge $params (dict
        "browse_year" ($v | time.Format "2006")
        "browse_month" ($v | time.Format "2006/01")
        "browse_day" ($v | time.Format "2006/01/02")
      ) }}

      {{ if strings.Contains $dir "content/" }}
        {{ $params = merge $params (dict
          "isContent" "true"
          "originalSection" (index (split $dir "/") 1)
          "timezone" $departure.timezone
        ) }}
      {{ end }}

      {{ $params = merge $params (dict
        "action" $k
        "date" $v
      ) }}
      {{ $.AddPage (dict
        "content" (dict "mediaType" "text/markdown" "value" (delimit (after 2 $parts) "---"))
        "dates" (dict "date" $v)
        "params" $params
        "kind" "page"
        "path" (print $basename $v.Unix)
      ) }}
    {{ end }}
  {{ end }}
{{ end }}
